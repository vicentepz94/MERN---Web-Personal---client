Dependencias instaladas en cliente
1.- SASS (scss): para potenciar la codificacion del css
2.- Semantic UI React: CDN (no bundler) para elementos de interfaz con React
3.- Lodash: Libreria de utilidad de JavaScript, funciones basicas de JavaScript pero mejoradas
4.- Formik: Administrar y controlar formularios
5.- Yup: Sirve para realizar Validaciones, se implementara con Formik
6.- React-Router-Dom: Utilizado para administrar el sistema de rutas front-end, se instala dependencia "npm i react-router-dom".
7.- Jwt-decode: Para decodificar tokens "npm i jwt-decode"


79.- Se elimina en index.js las etiquetas <Strictmode> de react que rodean "root.render(<App />);" para evitar error "deprecated"
87.- Se extiende la ruta en web/index.js para exportar a la pagina(y carpeta) Home con "../web/Home" en vez de "./Home"
93.- Para utilizar Formik en registerForm.js se crea RegisterForm.form.js donde se guarda la configuracion del formulario
95.- Se crea carpeta src/utils para crear constantes y definir el basepath del servidor
Luego se crea un directorio para ejecutar las peticiones HTTP, en src/api
97~98.- Hay pequeÃ±as diferencias entre el Login y el Register, poner atencion en:
    a)la creacion de la constante formik
    b)login no lleva useState error y validateError en el formulario
    c)en api auth, el body tipo json solo lleva stringify de (data) en vez de data.email y data.password
99.- Para gestionar la sesion se utiliza Context y un hook personalizado
102.- Utilizacion de constantes para cambiar una funcion y que reemplaze todos los valores que utilizen la misma funcion,
    En login form se quitan los props de la funcion LoginForm y openLogin(); de formik
103.- Se crea funcion anonima para utilizar el useEffect(que se ejecuta cada vez que refrescamos o abrimos la app), (async= ()=> {})()